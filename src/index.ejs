<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>image-viewer</title>
    <% if (htmlWebpackPlugin.options.nodeModules) { %>
      <!-- Add `node_modules/` to global paths so `require` works properly in development -->
      <script>
        require('module').globalPaths.push('<%= htmlWebpackPlugin.options.nodeModules.replace(/\\/g, '\\\\') %>')
      </script>
    <% } %>
  </head>
  <body id="dropBox">
    <div id="app"></div>
    <!-- Set `__static` path to static files in production -->
    <script>
      if (process.env.NODE_ENV !== 'development') window.__static = require('path').join(__dirname, '/static').replace(/\\/g, '\\\\')
    </script>

    <!-- webpack builds are automatically injected -->

    <script>
      const {
      ipcRenderer: ipc
      } = require('electron');
      let dropBox;
  
      window.onload = function () {
        dropBox = document.getElementById("dropBox");
        dropBox.ondragenter = ignoreDrag;
        dropBox.ondragover = ignoreDrag;
        dropBox.ondrop = drop;
      }
  
      function ignoreDrag(e) {
        //因为我们在处理拖放，所以应该确保没有其他元素会取得这个事件
        e.stopPropagation();
        e.preventDefault();
       
      }
  
      function drop(e) {
        //取消事件传播及默认行为
        e.stopPropagation();
        e.preventDefault();
        let files = e.dataTransfer.files;
        let obj = {
          fileName:e.dataTransfer.files[0].name,
          filePath:e.dataTransfer.files[0].path.replace(/\\/g,"/").replace(e.dataTransfer.files[0].name,""),
          fileType:e.dataTransfer.files[0].type,
          fileSize:e.dataTransfer.files[0].size
        }
        
        ipc.send('files-message',JSON.stringify(obj));

      }
  
    </script>
  </body>
</html>
